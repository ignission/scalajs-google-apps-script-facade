package facade.googleappsscript.jdbc

import facade.googleappsscript.GoogleAppsScript.BigNumber
import facade.googleappsscript.base._

import scala.scalajs.js

@js.native
trait CloudSqlAdvancedParameters extends js.Object {
  var connectTimeoutSeconds: Integer = js.native
  var database: String               = js.native
  var instance: String               = js.native
  var password: String               = js.native
  var queryTimeoutSeconds: Integer   = js.native
  var user: String                   = js.native
}

@js.native
trait ConnectionAdvancedParameters extends js.Object {
  var databaseName: String                   = js.native
  var password: String                       = js.native
  var useJDBCCompliantTimeZoneShift: Boolean = js.native
  var user: String                           = js.native
  var _serverSslCertificate: String          = js.native
  var _clientSslCertificate: String          = js.native
  var _clientSslKey: String                  = js.native
}

@js.native
trait Jdbc extends js.Object {
  def getCloudSqlConnection(url: String): JdbcConnection = js.native
  def getCloudSqlConnection(url: String, info: CloudSqlAdvancedParameters): JdbcConnection =
    js.native
  def getCloudSqlConnection(url: String, userName: String, password: String): JdbcConnection =
    js.native
  def getConnection(url: String): JdbcConnection                                     = js.native
  def getConnection(url: String, info: ConnectionAdvancedParameters): JdbcConnection = js.native
  def getConnection(url: String, userName: String, password: String): JdbcConnection = js.native
  def newDate(milliseconds: Integer): JdbcDate                                       = js.native
  def newTime(milliseconds: Integer): JdbcTime                                       = js.native
  def newTimestamp(milliseconds: Integer): JdbcTimestamp                             = js.native
  def parseDate(date: String): JdbcDate                                              = js.native
  def parseTime(time: String): JdbcTime                                              = js.native
  def parseTimestamp(timestamp: String): JdbcTimestamp                               = js.native
}

@js.native
trait JdbcArray extends js.Object {
  def free(): Unit                                                = js.native
  def getArray(): js.Dynamic                                      = js.native
  def getArray(index: Integer, count: Integer): js.Dynamic        = js.native
  def getBaseType(): Integer                                      = js.native
  def getBaseTypeName(): String                                   = js.native
  def getResultSet(): JdbcResultSet                               = js.native
  def getResultSet(index: Integer, count: Integer): JdbcResultSet = js.native
}

@js.native
trait JdbcBlob extends js.Object {
  def free(): Unit                                                 = js.native
  def getAppsScriptBlob(): Blob                                    = js.native
  def getAs(contentType: String): Blob                             = js.native
  def getBytes(position: Integer, length: Integer): js.Array[Byte] = js.native
  def length(): Integer                                            = js.native
  def position(pattern: js.Array[Byte], start: Integer): Integer   = js.native
  def position(pattern: JdbcBlob, start: Integer): Integer         = js.native
  def setBytes(position: Integer, blobSource: BlobSource): Integer = js.native
  def setBytes(
      position: Integer,
      blobSource: BlobSource,
      offset: Integer,
      length: Integer
  ): Integer                                                      = js.native
  def setBytes(position: Integer, bytes: js.Array[Byte]): Integer = js.native
  def setBytes(
      position: Integer,
      bytes: js.Array[Byte],
      offset: Integer,
      length: Integer
  ): Integer                          = js.native
  def truncate(length: Integer): Unit = js.native
}

@js.native
trait JdbcCallableStatement extends js.Object {
  def addBatch(): Unit              = js.native
  def addBatch(sql: String): Unit   = js.native
  def cancel(): Unit                = js.native
  def clearBatch(): Unit            = js.native
  def clearParameters(): Unit       = js.native
  def clearWarnings(): Unit         = js.native
  def close(): Unit                 = js.native
  def execute(): Boolean            = js.native
  def execute(sql: String): Boolean = js.native
  def execute(
      sql: String,
      autoGeneratedKeys: Integer,
      `sql_`: String,
      columnIndexes: js.Array[Integer]
  ): Boolean                                                       = js.native
  def execute(sql: String, columnNames: js.Array[String]): Boolean = js.native
  def executeBatch(): js.Array[Integer]                            = js.native
  def executeQuery(): JdbcResultSet                                = js.native
  def executeQuery(sql: String): JdbcResultSet                     = js.native
  def executeUpdate(): Integer                                     = js.native
  def executeUpdate(sql: String): Integer                          = js.native
  def executeUpdate(
      sql: String,
      autoGeneratedKeys: Integer,
      `sql_`: String,
      columnIndexes: js.Array[Integer]
  ): Integer                                                                 = js.native
  def executeUpdate(sql: String, columnNames: js.Array[String]): Integer     = js.native
  def getArray(parameterIndex: Integer): JdbcArray                           = js.native
  def getArray(parameterName: String): JdbcArray                             = js.native
  def getBigDecimal(parameterIndex: Integer): BigNumber                      = js.native
  def getBigDecimal(parameterName: String): BigNumber                        = js.native
  def getBlob(parameterIndex: Integer): JdbcBlob                             = js.native
  def getBlob(parameterName: String): JdbcBlob                               = js.native
  def getBoolean(parameterIndex: Integer): Boolean                           = js.native
  def getBoolean(parameterName: String): Boolean                             = js.native
  def getByte(parameterIndex: Integer): Byte                                 = js.native
  def getByte(parameterName: String): Byte                                   = js.native
  def getBytes(parameterIndex: Integer): js.Array[Byte]                      = js.native
  def getBytes(parameterName: String): js.Array[Byte]                        = js.native
  def getClob(parameterIndex: Integer): JdbcClob                             = js.native
  def getClob(parameterName: String): JdbcClob                               = js.native
  def getConnection(): JdbcConnection                                        = js.native
  def getDate(parameterIndex: Integer): JdbcDate                             = js.native
  def getDate(parameterIndex: Integer, timeZone: String): JdbcDate           = js.native
  def getDate(parameterName: String): JdbcDate                               = js.native
  def getDate(parameterName: String, timeZone: String): JdbcDate             = js.native
  def getDouble(parameterIndex: Integer): Double                             = js.native
  def getDouble(parameterName: String): Double                               = js.native
  def getFetchDirection(): Integer                                           = js.native
  def getFetchSize(): Integer                                                = js.native
  def getFloat(parameterIndex: Integer): Double                              = js.native
  def getFloat(parameterName: String): Double                                = js.native
  def getGeneratedKeys(): JdbcResultSet                                      = js.native
  def getInt(parameterIndex: Integer): Integer                               = js.native
  def getInt(parameterName: String): Integer                                 = js.native
  def getLong(parameterIndex: Integer): Integer                              = js.native
  def getLong(parameterName: String): Integer                                = js.native
  def getMaxFieldSize(): Integer                                             = js.native
  def getMaxRows(): Integer                                                  = js.native
  def getMetaData(): JdbcResultSetMetaData                                   = js.native
  def getMoreResults(): Boolean                                              = js.native
  def getMoreResults(current: Integer): Boolean                              = js.native
  def getNClob(parameterIndex: Integer): JdbcClob                            = js.native
  def getNClob(parameterName: String): JdbcClob                              = js.native
  def getNString(parameterIndex: Integer): String                            = js.native
  def getNString(parameterName: String): String                              = js.native
  def getObject(parameterIndex: Integer): js.Dynamic                         = js.native
  def getObject(parameterName: String): js.Dynamic                           = js.native
  def getParameterMetaData(): JdbcParameterMetaData                          = js.native
  def getQueryTimeout(): Integer                                             = js.native
  def getRef(parameterIndex: Integer): JdbcRef                               = js.native
  def getRef(parameterName: String): JdbcRef                                 = js.native
  def getResultSet(): JdbcResultSet                                          = js.native
  def getResultSetConcurrency(): Integer                                     = js.native
  def getResultSetHoldability(): Integer                                     = js.native
  def getResultSetType(): Integer                                            = js.native
  def getRowId(parameterIndex: Integer): JdbcRowId                           = js.native
  def getRowId(parameterName: String): JdbcRowId                             = js.native
  def getSQLXML(parameterIndex: Integer): JdbcSQLXML                         = js.native
  def getSQLXML(parameterName: String): JdbcSQLXML                           = js.native
  def getShort(parameterIndex: Integer): Integer                             = js.native
  def getShort(parameterName: String): Integer                               = js.native
  def getString(parameterIndex: Integer): String                             = js.native
  def getString(parameterName: String): String                               = js.native
  def getTime(parameterIndex: Integer): JdbcTime                             = js.native
  def getTime(parameterIndex: Integer, timeZone: String): JdbcTime           = js.native
  def getTime(parameterName: String): JdbcTime                               = js.native
  def getTime(parameterName: String, timeZone: String): JdbcTime             = js.native
  def getTimestamp(parameterIndex: Integer): JdbcTimestamp                   = js.native
  def getTimestamp(parameterIndex: Integer, timeZone: String): JdbcTimestamp = js.native
  def getTimestamp(parameterName: String): JdbcTimestamp                     = js.native
  def getTimestamp(parameterName: String, timeZone: String): JdbcTimestamp   = js.native
  def getURL(parameterIndex: Integer): String                                = js.native
  def getURL(parameterName: String): String                                  = js.native
  def getUpdateCount(): Integer                                              = js.native
  def getWarnings(): js.Array[String]                                        = js.native
  def isClosed(): Boolean                                                    = js.native
  def isPoolable(): Boolean                                                  = js.native
  def registerOutParameter(parameterIndex: Integer, sqlType: Integer): Unit  = js.native
  def registerOutParameter(parameterIndex: Integer, sqlType: Integer, scale: Integer): Unit =
    js.native
  def registerOutParameter(parameterIndex: Integer, sqlType: Integer, typeName: String): Unit =
    js.native
  def registerOutParameter(parameterName: String, sqlType: Integer): Unit = js.native
  def registerOutParameter(parameterName: String, sqlType: Integer, scale: Integer): Unit =
    js.native
  def registerOutParameter(parameterName: String, sqlType: Integer, typeName: String): Unit =
    js.native
  def setArray(parameterIndex: Integer, x: JdbcArray): Unit                       = js.native
  def setBigDecimal(parameterIndex: Integer, x: BigNumber): Unit                  = js.native
  def setBigDecimal(parameterName: String, x: BigNumber): Unit                    = js.native
  def setBlob(parameterIndex: Integer, x: JdbcBlob): Unit                         = js.native
  def setBlob(parameterName: String, x: JdbcBlob): Unit                           = js.native
  def setBoolean(parameterIndex: Integer, x: Boolean): Unit                       = js.native
  def setBoolean(parameterName: String, x: Boolean): Unit                         = js.native
  def setByte(parameterIndex: Integer, x: Byte): Unit                             = js.native
  def setByte(parameterName: String, x: Byte): Unit                               = js.native
  def setBytes(parameterIndex: Integer, x: js.Array[Byte]): Unit                  = js.native
  def setBytes(parameterName: String, x: js.Array[Byte]): Unit                    = js.native
  def setClob(parameterIndex: Integer, x: JdbcClob): Unit                         = js.native
  def setClob(parameterName: String, x: JdbcClob): Unit                           = js.native
  def setCursorName(name: String): Unit                                           = js.native
  def setDate(parameterIndex: Integer, x: JdbcDate): Unit                         = js.native
  def setDate(parameterIndex: Integer, x: JdbcDate, timeZone: String): Unit       = js.native
  def setDate(parameterName: String, x: JdbcDate): Unit                           = js.native
  def setDate(parameterName: String, x: JdbcDate, timeZone: String): Unit         = js.native
  def setDouble(parameterIndex: Integer, x: Double): Unit                         = js.native
  def setDouble(parameterName: String, x: Double): Unit                           = js.native
  def setEscapeProcessing(enable: Boolean): Unit                                  = js.native
  def setFetchDirection(direction: Integer): Unit                                 = js.native
  def setFetchSize(rows: Integer): Unit                                           = js.native
  def setFloat(parameterIndex: Integer, x: Double): Unit                          = js.native
  def setFloat(parameterName: String, x: Double): Unit                            = js.native
  def setInt(parameterIndex: Integer, x: Integer): Unit                           = js.native
  def setInt(parameterName: String, x: Integer): Unit                             = js.native
  def setLong(parameterIndex: Integer, x: Integer): Unit                          = js.native
  def setLong(parameterName: String, x: Integer): Unit                            = js.native
  def setMaxFieldSize(max: Integer): Unit                                         = js.native
  def setMaxRows(max: Integer): Unit                                              = js.native
  def setNClob(parameterIndex: Integer, x: JdbcClob): Unit                        = js.native
  def setNClob(parameterName: String, value: JdbcClob): Unit                      = js.native
  def setNString(parameterIndex: Integer, x: String): Unit                        = js.native
  def setNString(parameterName: String, value: String): Unit                      = js.native
  def setNull(parameterIndex: Integer, sqlType: Integer): Unit                    = js.native
  def setNull(parameterIndex: Integer, sqlType: Integer, typeName: String): Unit  = js.native
  def setNull(parameterName: String, sqlType: Integer): Unit                      = js.native
  def setNull(parameterName: String, sqlType: Integer, typeName: String): Unit    = js.native
  def setObject(index: Integer, x: js.Any): Unit                                  = js.native
  def setObject(parameterIndex: Integer, x: js.Any, targetSqlType: Integer): Unit = js.native
  def setObject(
      parameterIndex: Integer,
      x: js.Any,
      targetSqlType: Integer,
      scaleOrLength: Integer
  ): Unit                                                                       = js.native
  def setObject(parameterName: String, x: js.Any): Unit                         = js.native
  def setObject(parameterName: String, x: js.Any, targetSqlType: Integer): Unit = js.native
  def setObject(parameterName: String, x: js.Any, targetSqlType: Integer, scale: Integer): Unit =
    js.native
  def setPoolable(poolable: Boolean): Unit                                            = js.native
  def setQueryTimeout(seconds: Integer): Unit                                         = js.native
  def setRef(parameterIndex: Integer, x: JdbcRef): Unit                               = js.native
  def setRowId(parameterIndex: Integer, x: JdbcRowId): Unit                           = js.native
  def setRowId(parameterName: String, x: JdbcRowId): Unit                             = js.native
  def setSQLXML(parameterIndex: Integer, x: JdbcSQLXML): Unit                         = js.native
  def setSQLXML(parameterName: String, xmlObject: JdbcSQLXML): Unit                   = js.native
  def setShort(parameterIndex: Integer, x: Integer): Unit                             = js.native
  def setShort(parameterName: String, x: Integer): Unit                               = js.native
  def setString(parameterIndex: Integer, x: String): Unit                             = js.native
  def setString(parameterName: String, x: String): Unit                               = js.native
  def setTime(parameterIndex: Integer, x: JdbcTime): Unit                             = js.native
  def setTime(parameterIndex: Integer, x: JdbcTime, timeZone: String): Unit           = js.native
  def setTime(parameterName: String, x: JdbcTime): Unit                               = js.native
  def setTime(parameterName: String, x: JdbcTime, timeZone: String): Unit             = js.native
  def setTimestamp(parameterIndex: Integer, x: JdbcTimestamp): Unit                   = js.native
  def setTimestamp(parameterIndex: Integer, x: JdbcTimestamp, timeZone: String): Unit = js.native
  def setTimestamp(parameterName: String, x: JdbcTimestamp): Unit                     = js.native
  def setTimestamp(parameterName: String, x: JdbcTimestamp, timeZone: String): Unit   = js.native
  def setURL(parameterIndex: Integer, x: String): Unit                                = js.native
  def setURL(parameterName: String, `val`: String): Unit                              = js.native
  def wasNull(): Boolean                                                              = js.native
}

@js.native
trait JdbcClob extends js.Object {
  def free(): Unit                                                  = js.native
  def getAppsScriptBlob(): Blob                                     = js.native
  def getAs(contentType: String): Blob                              = js.native
  def getSubString(position: Integer, length: Integer): String      = js.native
  def length(): Integer                                             = js.native
  def position(search: JdbcClob, start: Integer): Integer           = js.native
  def position(search: String, start: Integer): Integer             = js.native
  def setString(position: Integer, blobSource: BlobSource): Integer = js.native
  def setString(
      position: Integer,
      blobSource: BlobSource,
      offset: Integer,
      len: Integer
  ): Integer                                               = js.native
  def setString(position: Integer, value: String): Integer = js.native
  def setString(position: Integer, value: String, offset: Integer, len: Integer): Integer =
    js.native
  def truncate(length: Integer): Unit = js.native
}

@js.native
trait JdbcConnection extends js.Object {
  def clearWarnings(): Unit                                                  = js.native
  def close(): Unit                                                          = js.native
  def commit(): Unit                                                         = js.native
  def createArrayOf(typeName: String, elements: js.Array[js.Any]): JdbcArray = js.native
  def createBlob(): JdbcBlob                                                 = js.native
  def createClob(): JdbcClob                                                 = js.native
  def createNClob(): JdbcClob                                                = js.native
  def createSQLXML(): JdbcSQLXML                                             = js.native
  def createStatement(): JdbcStatement                                       = js.native
  def createStatement(resultSetType: Integer, resultSetConcurrency: Integer): JdbcStatement =
    js.native
  def createStatement(
      resultSetType: Integer,
      resultSetConcurrency: Integer,
      resultSetHoldability: Integer
  ): JdbcStatement                                                             = js.native
  def createStruct(typeName: String, attributes: js.Array[js.Any]): JdbcStruct = js.native
  def getAutoCommit(): Boolean                                                 = js.native
  def getCatalog(): String                                                     = js.native
  def getHoldability(): Integer                                                = js.native
  def getMetaData(): JdbcDatabaseMetaData                                      = js.native
  def getTransactionIsolation(): Integer                                       = js.native
  def getWarnings(): js.Array[String]                                          = js.native
  def isClosed(): Boolean                                                      = js.native
  def isReadOnly(): Boolean                                                    = js.native
  def isValid(timeout: Integer): Boolean                                       = js.native
  def nativeSQL(sql: String): String                                           = js.native
  def prepareCall(sql: String): JdbcCallableStatement                          = js.native
  def prepareCall(
      sql: String,
      resultSetType: Integer,
      resultSetConcurrency: Integer
  ): JdbcCallableStatement = js.native
  def prepareCall(
      sql: String,
      resultSetType: Integer,
      resultSetConcurrency: Integer,
      resultSetHoldability: Integer
  ): JdbcCallableStatement                                                             = js.native
  def prepareStatement(sql: String): JdbcPreparedStatement                             = js.native
  def prepareStatement(sql: String, autoGeneratedKeys: Integer): JdbcPreparedStatement = js.native
  def prepareStatement(
      sql: String,
      resultSetType: Integer,
      resultSetConcurrency: Integer
  ): JdbcPreparedStatement = js.native
  def prepareStatement(
      sql: String,
      resultSetType: Integer,
      resultSetConcurrency: Integer,
      resultSetHoldability: Integer
  ): JdbcPreparedStatement = js.native
  def prepareStatementByIndex(sql: String, indices: js.Array[Integer]): JdbcPreparedStatement =
    js.native
  def prepareStatementByName(sql: String, columnNames: js.Array[String]): JdbcPreparedStatement =
    js.native
  def releaseSavepoint(savepoint: JdbcSavepoint): Unit = js.native
  def rollback(): Unit                                 = js.native
  def rollback(savepoint: JdbcSavepoint): Unit         = js.native
  def setAutoCommit(autoCommit: Boolean): Unit         = js.native
  def setCatalog(catalog: String): Unit                = js.native
  def setHoldability(holdability: Integer): Unit       = js.native
  def setReadOnly(readOnly: Boolean): Unit             = js.native
  def setSavepoint(): JdbcSavepoint                    = js.native
  def setSavepoint(name: String): JdbcSavepoint        = js.native
  def setTransactionIsolation(level: Integer): Unit    = js.native
}

@js.native
trait JdbcDatabaseMetaData extends js.Object {
  def allProceduresAreCallable(): Boolean              = js.native
  def allTablesAreSelectable(): Boolean                = js.native
  def autoCommitFailureClosesAllResultSets(): Boolean  = js.native
  def dataDefinitionCausesTransactionCommit(): Boolean = js.native
  def dataDefinitionIgnoredInTransactions(): Boolean   = js.native
  def deletesAreDetected(`type`: Integer): Boolean     = js.native
  def doesMaxRowSizeIncludeBlobs(): Boolean            = js.native
  def getAttributes(
      catalog: String,
      schemaPattern: String,
      typeNamePattern: String,
      attributeNamePattern: String
  ): JdbcResultSet = js.native
  def getBestRowIdentifier(
      catalog: String,
      schema: String,
      table: String,
      scope: Integer,
      nullable: Boolean
  ): JdbcResultSet                             = js.native
  def getCatalogSeparator(): String            = js.native
  def getCatalogTerm(): String                 = js.native
  def getCatalogs(): JdbcResultSet             = js.native
  def getClientInfoProperties(): JdbcResultSet = js.native
  def getColumnPrivileges(
      catalog: String,
      schema: String,
      table: String,
      columnNamePattern: String
  ): JdbcResultSet = js.native
  def getColumns(
      catalog: String,
      schemaPattern: String,
      tableNamePattern: String,
      columnNamePattern: String
  ): JdbcResultSet                    = js.native
  def getConnection(): JdbcConnection = js.native
  def getCrossReference(
      parentCatalog: String,
      parentSchema: String,
      parentTable: String,
      foreignCatalog: String,
      foreignSchema: String,
      foreignTable: String
  ): JdbcResultSet                                                                   = js.native
  def getDatabaseMajorVersion(): Integer                                             = js.native
  def getDatabaseMinorVersion(): Integer                                             = js.native
  def getDatabaseProductName(): String                                               = js.native
  def getDatabaseProductVersion(): String                                            = js.native
  def getDefaultTransactionIsolation(): Integer                                      = js.native
  def getDriverMajorVersion(): Integer                                               = js.native
  def getDriverMinorVersion(): Integer                                               = js.native
  def getDriverName(): String                                                        = js.native
  def getDriverVersion(): String                                                     = js.native
  def getExportedKeys(catalog: String, schema: String, table: String): JdbcResultSet = js.native
  def getExtraNameCharacters(): String                                               = js.native
  def getFunctionColumns(
      catalog: String,
      schemaPattern: String,
      functionNamePattern: String,
      columnNamePattern: String
  ): JdbcResultSet = js.native
  def getFunctions(
      catalog: String,
      schemaPattern: String,
      functionNamePattern: String
  ): JdbcResultSet                                                                   = js.native
  def getIdentifierQuoteString(): String                                             = js.native
  def getImportedKeys(catalog: String, schema: String, table: String): JdbcResultSet = js.native
  def getIndexInfo(
      catalog: String,
      schema: String,
      table: String,
      unique: Boolean,
      approximate: Boolean
  ): JdbcResultSet                                                                  = js.native
  def getJDBCMajorVersion(): Integer                                                = js.native
  def getJDBCMinorVersion(): Integer                                                = js.native
  def getMaxBinaryLiteralLength(): Integer                                          = js.native
  def getMaxCatalogNameLength(): Integer                                            = js.native
  def getMaxCharLiteralLength(): Integer                                            = js.native
  def getMaxColumnNameLength(): Integer                                             = js.native
  def getMaxColumnsInGroupBy(): Integer                                             = js.native
  def getMaxColumnsInIndex(): Integer                                               = js.native
  def getMaxColumnsInOrderBy(): Integer                                             = js.native
  def getMaxColumnsInSelect(): Integer                                              = js.native
  def getMaxColumnsInTable(): Integer                                               = js.native
  def getMaxConnections(): Integer                                                  = js.native
  def getMaxCursorNameLength(): Integer                                             = js.native
  def getMaxIndexLength(): Integer                                                  = js.native
  def getMaxProcedureNameLength(): Integer                                          = js.native
  def getMaxRowSize(): Integer                                                      = js.native
  def getMaxSchemaNameLength(): Integer                                             = js.native
  def getMaxStatementLength(): Integer                                              = js.native
  def getMaxStatements(): Integer                                                   = js.native
  def getMaxTableNameLength(): Integer                                              = js.native
  def getMaxTablesInSelect(): Integer                                               = js.native
  def getMaxUserNameLength(): Integer                                               = js.native
  def getNumericFunctions(): String                                                 = js.native
  def getPrimaryKeys(catalog: String, schema: String, table: String): JdbcResultSet = js.native
  def getProcedureColumns(
      catalog: String,
      schemaPattern: String,
      procedureNamePattern: String,
      columnNamePattern: String
  ): JdbcResultSet               = js.native
  def getProcedureTerm(): String = js.native
  def getProcedures(
      catalog: String,
      schemaPattern: String,
      procedureNamePattern: String
  ): JdbcResultSet                                                      = js.native
  def getResultSetHoldability(): Integer                                = js.native
  def getRowIdLifetime(): Integer                                       = js.native
  def getSQLKeywords(): String                                          = js.native
  def getSQLStateType(): Integer                                        = js.native
  def getSchemaTerm(): String                                           = js.native
  def getSchemas(): JdbcResultSet                                       = js.native
  def getSchemas(catalog: String, schemaPattern: String): JdbcResultSet = js.native
  def getSearchStringEscape(): String                                   = js.native
  def getStringFunctions(): String                                      = js.native
  def getSuperTables(
      catalog: String,
      schemaPattern: String,
      tableNamePattern: String
  ): JdbcResultSet = js.native
  def getSuperTypes(
      catalog: String,
      schemaPattern: String,
      typeNamePattern: String
  ): JdbcResultSet                 = js.native
  def getSystemFunctions(): String = js.native
  def getTablePrivileges(
      catalog: String,
      schemaPattern: String,
      tableNamePattern: String
  ): JdbcResultSet                   = js.native
  def getTableTypes(): JdbcResultSet = js.native
  def getTables(
      catalog: String,
      schemaPattern: String,
      tableNamePattern: String,
      types: js.Array[String]
  ): JdbcResultSet                   = js.native
  def getTimeDateFunctions(): String = js.native
  def getTypeInfo(): JdbcResultSet   = js.native
  def getUDTs(
      catalog: String,
      schemaPattern: String,
      typeNamePattern: String,
      types: js.Array[Integer]
  ): JdbcResultSet                                                                     = js.native
  def getURL(): String                                                                 = js.native
  def getUserName(): String                                                            = js.native
  def getVersionColumns(catalog: String, schema: String, table: String): JdbcResultSet = js.native
  def insertsAreDetected(`type`: Integer): Boolean                                     = js.native
  def isCatalogAtStart(): Boolean                                                      = js.native
  def isReadOnly(): Boolean                                                            = js.native
  def locatorsUpdateCopy(): Boolean                                                    = js.native
  def nullPlusNonNullIsNull(): Boolean                                                 = js.native
  def nullsAreSortedAtEnd(): Boolean                                                   = js.native
  def nullsAreSortedAtStart(): Boolean                                                 = js.native
  def nullsAreSortedHigh(): Boolean                                                    = js.native
  def nullsAreSortedLow(): Boolean                                                     = js.native
  def othersDeletesAreVisible(`type`: Integer): Boolean                                = js.native
  def othersInsertsAreVisible(`type`: Integer): Boolean                                = js.native
  def othersUpdatesAreVisible(`type`: Integer): Boolean                                = js.native
  def ownDeletesAreVisible(`type`: Integer): Boolean                                   = js.native
  def ownInsertsAreVisible(`type`: Integer): Boolean                                   = js.native
  def ownUpdatesAreVisible(`type`: Integer): Boolean                                   = js.native
  def storesLowerCaseIdentifiers(): Boolean                                            = js.native
  def storesLowerCaseQuotedIdentifiers(): Boolean                                      = js.native
  def storesMixedCaseIdentifiers(): Boolean                                            = js.native
  def storesMixedCaseQuotedIdentifiers(): Boolean                                      = js.native
  def storesUpperCaseIdentifiers(): Boolean                                            = js.native
  def storesUpperCaseQuotedIdentifiers(): Boolean                                      = js.native
  def supportsANSI92EntryLevelSQL(): Boolean                                           = js.native
  def supportsANSI92FullSQL(): Boolean                                                 = js.native
  def supportsANSI92IntermediateSQL(): Boolean                                         = js.native
  def supportsAlterTableWithAddColumn(): Boolean                                       = js.native
  def supportsAlterTableWithDropColumn(): Boolean                                      = js.native
  def supportsBatchUpdates(): Boolean                                                  = js.native
  def supportsCatalogsInDataManipulation(): Boolean                                    = js.native
  def supportsCatalogsInIndexDefinitions(): Boolean                                    = js.native
  def supportsCatalogsInPrivilegeDefinitions(): Boolean                                = js.native
  def supportsCatalogsInProcedureCalls(): Boolean                                      = js.native
  def supportsCatalogsInTableDefinitions(): Boolean                                    = js.native
  def supportsColumnAliasing(): Boolean                                                = js.native
  def supportsConvert(): Boolean                                                       = js.native
  def supportsConvert(fromType: Integer, toType: Integer): Boolean                     = js.native
  def supportsCoreSQLGrammar(): Boolean                                                = js.native
  def supportsCorrelatedSubqueries(): Boolean                                          = js.native
  def supportsDataDefinitionAndDataManipulationTransactions(): Boolean                 = js.native
  def supportsDataManipulationTransactionsOnly(): Boolean                              = js.native
  def supportsDifferentTableCorrelationNames(): Boolean                                = js.native
  def supportsExpressionsInOrderBy(): Boolean                                          = js.native
  def supportsExtendedSQLGrammar(): Boolean                                            = js.native
  def supportsFullOuterJoins(): Boolean                                                = js.native
  def supportsGetGeneratedKeys(): Boolean                                              = js.native
  def supportsGroupBy(): Boolean                                                       = js.native
  def supportsGroupByBeyondSelect(): Boolean                                           = js.native
  def supportsGroupByUnrelated(): Boolean                                              = js.native
  def supportsIntegrityEnhancementFacility(): Boolean                                  = js.native
  def supportsLikeEscapeClause(): Boolean                                              = js.native
  def supportsLimitedOuterJoins(): Boolean                                             = js.native
  def supportsMinimumSQLGrammar(): Boolean                                             = js.native
  def supportsMixedCaseIdentifiers(): Boolean                                          = js.native
  def supportsMixedCaseQuotedIdentifiers(): Boolean                                    = js.native
  def supportsMultipleOpenResults(): Boolean                                           = js.native
  def supportsMultipleResultSets(): Boolean                                            = js.native
  def supportsMultipleTransactions(): Boolean                                          = js.native
  def supportsNamedParameters(): Boolean                                               = js.native
  def supportsNonNullableColumns(): Boolean                                            = js.native
  def supportsOpenCursorsAcrossCommit(): Boolean                                       = js.native
  def supportsOpenCursorsAcrossRollback(): Boolean                                     = js.native
  def supportsOpenStatementsAcrossCommit(): Boolean                                    = js.native
  def supportsOpenStatementsAcrossRollback(): Boolean                                  = js.native
  def supportsOrderByUnrelated(): Boolean                                              = js.native
  def supportsOuterJoins(): Boolean                                                    = js.native
  def supportsPositionedDelete(): Boolean                                              = js.native
  def supportsPositionedUpdate(): Boolean                                              = js.native
  def supportsResultSetConcurrency(`type`: Integer, concurrency: Integer): Boolean     = js.native
  def supportsResultSetHoldability(holdability: Integer): Boolean                      = js.native
  def supportsResultSetType(`type`: Integer): Boolean                                  = js.native
  def supportsSavepoints(): Boolean                                                    = js.native
  def supportsSchemasInDataManipulation(): Boolean                                     = js.native
  def supportsSchemasInIndexDefinitions(): Boolean                                     = js.native
  def supportsSchemasInPrivilegeDefinitions(): Boolean                                 = js.native
  def supportsSchemasInProcedureCalls(): Boolean                                       = js.native
  def supportsSchemasInTableDefinitions(): Boolean                                     = js.native
  def supportsSelectForUpdate(): Boolean                                               = js.native
  def supportsStatementPooling(): Boolean                                              = js.native
  def supportsStoredFunctionsUsingCallSyntax(): Boolean                                = js.native
  def supportsStoredProcedures(): Boolean                                              = js.native
  def supportsSubqueriesInComparisons(): Boolean                                       = js.native
  def supportsSubqueriesInExists(): Boolean                                            = js.native
  def supportsSubqueriesInIns(): Boolean                                               = js.native
  def supportsSubqueriesInQuantifieds(): Boolean                                       = js.native
  def supportsTableCorrelationNames(): Boolean                                         = js.native
  def supportsTransactionIsolationLevel(level: Integer): Boolean                       = js.native
  def supportsTransactions(): Boolean                                                  = js.native
  def supportsUnion(): Boolean                                                         = js.native
  def supportsUnionAll(): Boolean                                                      = js.native
  def updatesAreDetected(`type`: Integer): Boolean                                     = js.native
  def usesLocalFilePerTable(): Boolean                                                 = js.native
  def usesLocalFiles(): Boolean                                                        = js.native
}

@js.native
trait JdbcDate extends js.Object {
  def after(when: JdbcDate): Boolean       = js.native
  def before(when: JdbcDate): Boolean      = js.native
  def getDate(): Integer                   = js.native
  def getMonth(): Integer                  = js.native
  def getTime(): Integer                   = js.native
  def getYear(): Integer                   = js.native
  def setDate(date: Integer): Unit         = js.native
  def setMonth(month: Integer): Unit       = js.native
  def setTime(milliseconds: Integer): Unit = js.native
  def setYear(year: Integer): Unit         = js.native
}

@js.native
trait JdbcParameterMetaData extends js.Object {
  def getParameterClassName(param: Integer): String = js.native
  def getParameterCount(): Integer                  = js.native
  def getParameterMode(param: Integer): Integer     = js.native
  def getParameterType(param: Integer): Integer     = js.native
  def getParameterTypeName(param: Integer): String  = js.native
  def getPrecision(param: Integer): Integer         = js.native
  def getScale(param: Integer): Integer             = js.native
  def isNullable(param: Integer): Integer           = js.native
  def isSigned(param: Integer): Boolean             = js.native
}

@js.native
trait JdbcPreparedStatement extends js.Object {
  def addBatch(): Unit              = js.native
  def addBatch(sql: String): Unit   = js.native
  def cancel(): Unit                = js.native
  def clearBatch(): Unit            = js.native
  def clearParameters(): Unit       = js.native
  def clearWarnings(): Unit         = js.native
  def close(): Unit                 = js.native
  def execute(): Boolean            = js.native
  def execute(sql: String): Boolean = js.native
  def execute(
      sql: String,
      autoGeneratedKeys: Integer,
      `sql_`: String,
      columnIndexes: js.Array[Integer]
  ): Boolean                                                       = js.native
  def execute(sql: String, columnNames: js.Array[String]): Boolean = js.native
  def executeBatch(): js.Array[Integer]                            = js.native
  def executeQuery(): JdbcResultSet                                = js.native
  def executeQuery(sql: String): JdbcResultSet                     = js.native
  def executeUpdate(): Integer                                     = js.native
  def executeUpdate(sql: String): Integer                          = js.native
  def executeUpdate(
      sql: String,
      autoGeneratedKeys: Integer,
      `sql_`: String,
      columnIndexes: js.Array[Integer]
  ): Integer                                                                      = js.native
  def executeUpdate(sql: String, columnNames: js.Array[String]): Integer          = js.native
  def getConnection(): JdbcConnection                                             = js.native
  def getFetchDirection(): Integer                                                = js.native
  def getFetchSize(): Integer                                                     = js.native
  def getGeneratedKeys(): JdbcResultSet                                           = js.native
  def getMaxFieldSize(): Integer                                                  = js.native
  def getMaxRows(): Integer                                                       = js.native
  def getMetaData(): JdbcResultSetMetaData                                        = js.native
  def getMoreResults(): Boolean                                                   = js.native
  def getMoreResults(current: Integer): Boolean                                   = js.native
  def getParameterMetaData(): JdbcParameterMetaData                               = js.native
  def getQueryTimeout(): Integer                                                  = js.native
  def getResultSet(): JdbcResultSet                                               = js.native
  def getResultSetConcurrency(): Integer                                          = js.native
  def getResultSetHoldability(): Integer                                          = js.native
  def getResultSetType(): Integer                                                 = js.native
  def getUpdateCount(): Integer                                                   = js.native
  def getWarnings(): js.Array[String]                                             = js.native
  def isClosed(): Boolean                                                         = js.native
  def isPoolable(): Boolean                                                       = js.native
  def setArray(parameterIndex: Integer, x: JdbcArray): Unit                       = js.native
  def setBigDecimal(parameterIndex: Integer, x: BigNumber): Unit                  = js.native
  def setBlob(parameterIndex: Integer, x: JdbcBlob): Unit                         = js.native
  def setBoolean(parameterIndex: Integer, x: Boolean): Unit                       = js.native
  def setByte(parameterIndex: Integer, x: Byte): Unit                             = js.native
  def setBytes(parameterIndex: Integer, x: js.Array[Byte]): Unit                  = js.native
  def setClob(parameterIndex: Integer, x: JdbcClob): Unit                         = js.native
  def setCursorName(name: String): Unit                                           = js.native
  def setDate(parameterIndex: Integer, x: JdbcDate): Unit                         = js.native
  def setDate(parameterIndex: Integer, x: JdbcDate, timeZone: String): Unit       = js.native
  def setDouble(parameterIndex: Integer, x: Double): Unit                         = js.native
  def setEscapeProcessing(enable: Boolean): Unit                                  = js.native
  def setFetchDirection(direction: Integer): Unit                                 = js.native
  def setFetchSize(rows: Integer): Unit                                           = js.native
  def setFloat(parameterIndex: Integer, x: Double): Unit                          = js.native
  def setInt(parameterIndex: Integer, x: Integer): Unit                           = js.native
  def setLong(parameterIndex: Integer, x: Integer): Unit                          = js.native
  def setMaxFieldSize(max: Integer): Unit                                         = js.native
  def setMaxRows(max: Integer): Unit                                              = js.native
  def setNClob(parameterIndex: Integer, x: JdbcClob): Unit                        = js.native
  def setNString(parameterIndex: Integer, x: String): Unit                        = js.native
  def setNull(parameterIndex: Integer, sqlType: Integer): Unit                    = js.native
  def setNull(parameterIndex: Integer, sqlType: Integer, typeName: String): Unit  = js.native
  def setObject(index: Integer, x: js.Any): Unit                                  = js.native
  def setObject(parameterIndex: Integer, x: js.Any, targetSqlType: Integer): Unit = js.native
  def setObject(
      parameterIndex: Integer,
      x: js.Any,
      targetSqlType: Integer,
      scaleOrLength: Integer
  ): Unit                                                                             = js.native
  def setPoolable(poolable: Boolean): Unit                                            = js.native
  def setQueryTimeout(seconds: Integer): Unit                                         = js.native
  def setRef(parameterIndex: Integer, x: JdbcRef): Unit                               = js.native
  def setRowId(parameterIndex: Integer, x: JdbcRowId): Unit                           = js.native
  def setSQLXML(parameterIndex: Integer, x: JdbcSQLXML): Unit                         = js.native
  def setShort(parameterIndex: Integer, x: Integer): Unit                             = js.native
  def setString(parameterIndex: Integer, x: String): Unit                             = js.native
  def setTime(parameterIndex: Integer, x: JdbcTime): Unit                             = js.native
  def setTime(parameterIndex: Integer, x: JdbcTime, timeZone: String): Unit           = js.native
  def setTimestamp(parameterIndex: Integer, x: JdbcTimestamp): Unit                   = js.native
  def setTimestamp(parameterIndex: Integer, x: JdbcTimestamp, timeZone: String): Unit = js.native
  def setURL(parameterIndex: Integer, x: String): Unit                                = js.native
}

@js.native
trait JdbcRef extends js.Object {
  def getBaseTypeName(): String         = js.native
  def getObject(): js.Dynamic           = js.native
  def setObject(`object`: js.Any): Unit = js.native
}

@js.native
trait JdbcResultSet extends js.Object {
  def absolute(row: Integer): Boolean                                             = js.native
  def afterLast(): Unit                                                           = js.native
  def beforeFirst(): Unit                                                         = js.native
  def cancelRowUpdates(): Unit                                                    = js.native
  def clearWarnings(): Unit                                                       = js.native
  def close(): Unit                                                               = js.native
  def deleteRow(): Unit                                                           = js.native
  def findColumn(columnLabel: String): Integer                                    = js.native
  def first(): Boolean                                                            = js.native
  def getArray(columnIndex: Integer): JdbcArray                                   = js.native
  def getArray(columnLabel: String): JdbcArray                                    = js.native
  def getBigDecimal(columnIndex: Integer): BigNumber                              = js.native
  def getBigDecimal(columnLabel: String): BigNumber                               = js.native
  def getBlob(columnIndex: Integer): JdbcBlob                                     = js.native
  def getBlob(columnLabel: String): JdbcBlob                                      = js.native
  def getBoolean(columnIndex: Integer): Boolean                                   = js.native
  def getBoolean(columnLabel: String): Boolean                                    = js.native
  def getByte(columnIndex: Integer): Byte                                         = js.native
  def getByte(columnLabel: String): Byte                                          = js.native
  def getBytes(columnIndex: Integer): js.Array[Byte]                              = js.native
  def getBytes(columnLabel: String): js.Array[Byte]                               = js.native
  def getClob(columnIndex: Integer): JdbcClob                                     = js.native
  def getClob(columnLabel: String): JdbcClob                                      = js.native
  def getConcurrency(): Integer                                                   = js.native
  def getCursorName(): String                                                     = js.native
  def getDate(columnIndex: Integer): JdbcDate                                     = js.native
  def getDate(columnIndex: Integer, timeZone: String): JdbcDate                   = js.native
  def getDate(columnLabel: String): JdbcDate                                      = js.native
  def getDate(columnLabel: String, timeZone: String): JdbcDate                    = js.native
  def getDouble(columnIndex: Integer): Double                                     = js.native
  def getDouble(columnLabel: String): Double                                      = js.native
  def getFetchDirection(): Integer                                                = js.native
  def getFetchSize(): Integer                                                     = js.native
  def getFloat(columnIndex: Integer): Double                                      = js.native
  def getFloat(columnLabel: String): Double                                       = js.native
  def getHoldability(): Integer                                                   = js.native
  def getInt(columnIndex: Integer): Integer                                       = js.native
  def getInt(columnLabel: String): Integer                                        = js.native
  def getLong(columnIndex: Integer): Integer                                      = js.native
  def getLong(columnLabel: String): Integer                                       = js.native
  def getMetaData(): JdbcResultSetMetaData                                        = js.native
  def getNClob(columnIndex: Integer): JdbcClob                                    = js.native
  def getNClob(columnLabel: String): JdbcClob                                     = js.native
  def getNString(columnIndex: Integer): String                                    = js.native
  def getNString(columnLabel: String): String                                     = js.native
  def getObject(columnIndex: Integer): js.Dynamic                                 = js.native
  def getObject(columnLabel: String): js.Dynamic                                  = js.native
  def getRef(columnIndex: Integer): JdbcRef                                       = js.native
  def getRef(columnLabel: String): JdbcRef                                        = js.native
  def getRow(): Integer                                                           = js.native
  def getRowId(columnIndex: Integer): JdbcRowId                                   = js.native
  def getRowId(columnLabel: String): JdbcRowId                                    = js.native
  def getSQLXML(columnIndex: Integer): JdbcSQLXML                                 = js.native
  def getSQLXML(columnLabel: String): JdbcSQLXML                                  = js.native
  def getShort(columnIndex: Integer): Integer                                     = js.native
  def getShort(columnLabel: String): Integer                                      = js.native
  def getStatement(): JdbcStatement                                               = js.native
  def getString(columnIndex: Integer): String                                     = js.native
  def getString(columnLabel: String): String                                      = js.native
  def getTime(columnIndex: Integer): JdbcTime                                     = js.native
  def getTime(columnIndex: Integer, timeZone: String): JdbcTime                   = js.native
  def getTime(columnLabel: String): JdbcTime                                      = js.native
  def getTime(columnLabel: String, timeZone: String): JdbcTime                    = js.native
  def getTimestamp(columnIndex: Integer): JdbcTimestamp                           = js.native
  def getTimestamp(columnIndex: Integer, timeZone: String): JdbcTimestamp         = js.native
  def getTimestamp(columnLabel: String): JdbcTimestamp                            = js.native
  def getTimestamp(columnLabel: String, timeZone: String): JdbcTimestamp          = js.native
  def getType(): Integer                                                          = js.native
  def getURL(columnIndex: Integer): String                                        = js.native
  def getURL(columnLabel: String): String                                         = js.native
  def getWarnings(): js.Array[String]                                             = js.native
  def insertRow(): Unit                                                           = js.native
  def isAfterLast(): Boolean                                                      = js.native
  def isBeforeFirst(): Boolean                                                    = js.native
  def isClosed(): Boolean                                                         = js.native
  def isFirst(): Boolean                                                          = js.native
  def isLast(): Boolean                                                           = js.native
  def last(): Boolean                                                             = js.native
  def moveToCurrentRow(): Unit                                                    = js.native
  def moveToInsertRow(): Unit                                                     = js.native
  def next(): Boolean                                                             = js.native
  def previous(): Boolean                                                         = js.native
  def refreshRow(): Unit                                                          = js.native
  def relative(rows: Integer): Boolean                                            = js.native
  def rowDeleted(): Boolean                                                       = js.native
  def rowInserted(): Boolean                                                      = js.native
  def rowUpdated(): Boolean                                                       = js.native
  def setFetchDirection(direction: Integer): Unit                                 = js.native
  def setFetchSize(rows: Integer): Unit                                           = js.native
  def updateArray(columnIndex: Integer, x: JdbcArray): Unit                       = js.native
  def updateArray(columnLabel: String, x: JdbcArray): Unit                        = js.native
  def updateBigDecimal(columnIndex: Integer, x: BigNumber): Unit                  = js.native
  def updateBigDecimal(columnLabel: String, x: BigNumber): Unit                   = js.native
  def updateBlob(columnIndex: Integer, x: JdbcBlob): Unit                         = js.native
  def updateBlob(columnLabel: String, x: JdbcBlob): Unit                          = js.native
  def updateBoolean(columnIndex: Integer, x: Boolean): Unit                       = js.native
  def updateBoolean(columnLabel: String, x: Boolean): Unit                        = js.native
  def updateByte(columnIndex: Integer, x: Byte): Unit                             = js.native
  def updateByte(columnLabel: String, x: Byte): Unit                              = js.native
  def updateBytes(columnIndex: Integer, x: js.Array[Byte]): Unit                  = js.native
  def updateBytes(columnLabel: String, x: js.Array[Byte]): Unit                   = js.native
  def updateClob(columnIndex: Integer, x: JdbcClob): Unit                         = js.native
  def updateClob(columnLabel: String, x: JdbcClob): Unit                          = js.native
  def updateDate(columnIndex: Integer, x: JdbcDate): Unit                         = js.native
  def updateDate(columnLabel: String, x: JdbcDate): Unit                          = js.native
  def updateDouble(columnIndex: Integer, x: Double): Unit                         = js.native
  def updateDouble(columnLabel: String, x: Double): Unit                          = js.native
  def updateFloat(columnIndex: Integer, x: Double): Unit                          = js.native
  def updateFloat(columnLabel: String, x: Double): Unit                           = js.native
  def updateInt(columnIndex: Integer, x: Integer): Unit                           = js.native
  def updateInt(columnLabel: String, x: Integer): Unit                            = js.native
  def updateLong(columnIndex: Integer, x: Integer): Unit                          = js.native
  def updateLong(columnLabel: String, x: Integer): Unit                           = js.native
  def updateNClob(columnIndex: Integer, x: JdbcClob): Unit                        = js.native
  def updateNClob(columnLabel: String, x: JdbcClob): Unit                         = js.native
  def updateNString(columnIndex: Integer, x: String): Unit                        = js.native
  def updateNString(columnLabel: String, x: String): Unit                         = js.native
  def updateNull(columnIndex: Integer): Unit                                      = js.native
  def updateNull(columnLabel: String): Unit                                       = js.native
  def updateObject(columnIndex: Integer, x: js.Any): Unit                         = js.native
  def updateObject(columnIndex: Integer, x: js.Any, scaleOrLength: Integer): Unit = js.native
  def updateObject(columnLabel: String, x: js.Any): Unit                          = js.native
  def updateObject(columnLabel: String, x: js.Any, scaleOrLength: Integer): Unit  = js.native
  def updateRef(columnIndex: Integer, x: JdbcRef): Unit                           = js.native
  def updateRef(columnLabel: String, x: JdbcRef): Unit                            = js.native
  def updateRow(): Unit                                                           = js.native
  def updateRowId(columnIndex: Integer, x: JdbcRowId): Unit                       = js.native
  def updateRowId(columnLabel: String, x: JdbcRowId): Unit                        = js.native
  def updateSQLXML(columnIndex: Integer, x: JdbcSQLXML): Unit                     = js.native
  def updateSQLXML(columnLabel: String, x: JdbcSQLXML): Unit                      = js.native
  def updateShort(columnIndex: Integer, x: Integer): Unit                         = js.native
  def updateShort(columnLabel: String, x: Integer): Unit                          = js.native
  def updateString(columnIndex: Integer, x: String): Unit                         = js.native
  def updateString(columnLabel: String, x: String): Unit                          = js.native
  def updateTime(columnIndex: Integer, x: JdbcTime): Unit                         = js.native
  def updateTime(columnLabel: String, x: JdbcTime): Unit                          = js.native
  def updateTimestamp(columnIndex: Integer, x: JdbcTimestamp): Unit               = js.native
  def updateTimestamp(columnLabel: String, x: JdbcTimestamp): Unit                = js.native
  def wasNull(): Boolean                                                          = js.native
}

@js.native
trait JdbcResultSetMetaData extends js.Object {
  def getCatalogName(column: Integer): String        = js.native
  def getColumnClassName(column: Integer): String    = js.native
  def getColumnCount(): Integer                      = js.native
  def getColumnDisplaySize(column: Integer): Integer = js.native
  def getColumnLabel(column: Integer): String        = js.native
  def getColumnName(column: Integer): String         = js.native
  def getColumnType(column: Integer): Integer        = js.native
  def getColumnTypeName(column: Integer): String     = js.native
  def getPrecision(column: Integer): Integer         = js.native
  def getScale(column: Integer): Integer             = js.native
  def getSchemaName(column: Integer): String         = js.native
  def getTableName(column: Integer): String          = js.native
  def isAutoIncrement(column: Integer): Boolean      = js.native
  def isCaseSensitive(column: Integer): Boolean      = js.native
  def isCurrency(column: Integer): Boolean           = js.native
  def isDefinitelyWritable(column: Integer): Boolean = js.native
  def isNullable(column: Integer): Integer           = js.native
  def isReadOnly(column: Integer): Boolean           = js.native
  def isSearchable(column: Integer): Boolean         = js.native
  def isSigned(column: Integer): Boolean             = js.native
  def isWritable(column: Integer): Boolean           = js.native
}

@js.native
trait JdbcRowId extends js.Object {
  def getBytes(): js.Array[Byte] = js.native
}

@js.native
trait JdbcSQLXML extends js.Object {
  def free(): Unit                   = js.native
  def getString(): String            = js.native
  def setString(value: String): Unit = js.native
}

@js.native
trait JdbcSavepoint extends js.Object {
  def getSavepointId(): Integer  = js.native
  def getSavepointName(): String = js.native
}

@js.native
trait JdbcStatement extends js.Object {
  def addBatch(sql: String): Unit   = js.native
  def cancel(): Unit                = js.native
  def clearBatch(): Unit            = js.native
  def clearWarnings(): Unit         = js.native
  def close(): Unit                 = js.native
  def execute(sql: String): Boolean = js.native
  def execute(
      sql: String,
      autoGeneratedKeys: Integer,
      `sql_`: String,
      columnIndexes: js.Array[Integer]
  ): Boolean                                                       = js.native
  def execute(sql: String, columnNames: js.Array[String]): Boolean = js.native
  def executeBatch(): js.Array[Integer]                            = js.native
  def executeQuery(sql: String): JdbcResultSet                     = js.native
  def executeUpdate(sql: String): Integer                          = js.native
  def executeUpdate(
      sql: String,
      autoGeneratedKeys: Integer,
      `sql_`: String,
      columnIndexes: js.Array[Integer]
  ): Integer                                                             = js.native
  def executeUpdate(sql: String, columnNames: js.Array[String]): Integer = js.native
  def getConnection(): JdbcConnection                                    = js.native
  def getFetchDirection(): Integer                                       = js.native
  def getFetchSize(): Integer                                            = js.native
  def getGeneratedKeys(): JdbcResultSet                                  = js.native
  def getMaxFieldSize(): Integer                                         = js.native
  def getMaxRows(): Integer                                              = js.native
  def getMoreResults(): Boolean                                          = js.native
  def getMoreResults(current: Integer): Boolean                          = js.native
  def getQueryTimeout(): Integer                                         = js.native
  def getResultSet(): JdbcResultSet                                      = js.native
  def getResultSetConcurrency(): Integer                                 = js.native
  def getResultSetHoldability(): Integer                                 = js.native
  def getResultSetType(): Integer                                        = js.native
  def getUpdateCount(): Integer                                          = js.native
  def getWarnings(): js.Array[String]                                    = js.native
  def isClosed(): Boolean                                                = js.native
  def isPoolable(): Boolean                                              = js.native
  def setCursorName(name: String): Unit                                  = js.native
  def setEscapeProcessing(enable: Boolean): Unit                         = js.native
  def setFetchDirection(direction: Integer): Unit                        = js.native
  def setFetchSize(rows: Integer): Unit                                  = js.native
  def setMaxFieldSize(max: Integer): Unit                                = js.native
  def setMaxRows(max: Integer): Unit                                     = js.native
  def setPoolable(poolable: Boolean): Unit                               = js.native
  def setQueryTimeout(seconds: Integer): Unit                            = js.native
}

@js.native
trait JdbcStruct extends js.Object {
  def getAttributes(): js.Array[js.Any] = js.native
  def getSQLTypeName(): String          = js.native
}

@js.native
trait JdbcTime extends js.Object {
  def after(when: JdbcTime): Boolean       = js.native
  def before(when: JdbcTime): Boolean      = js.native
  def getHours(): Integer                  = js.native
  def getMinutes(): Integer                = js.native
  def getSeconds(): Integer                = js.native
  def getTime(): Integer                   = js.native
  def setHours(hours: Integer): Unit       = js.native
  def setMinutes(minutes: Integer): Unit   = js.native
  def setSeconds(seconds: Integer): Unit   = js.native
  def setTime(milliseconds: Integer): Unit = js.native
}

@js.native
trait JdbcTimestamp extends js.Object {
  def after(when: JdbcTimestamp): Boolean  = js.native
  def before(when: JdbcTimestamp): Boolean = js.native
  def getDate(): Integer                   = js.native
  def getHours(): Integer                  = js.native
  def getMinutes(): Integer                = js.native
  def getMonth(): Integer                  = js.native
  def getNanos(): Integer                  = js.native
  def getSeconds(): Integer                = js.native
  def getTime(): Integer                   = js.native
  def getYear(): Integer                   = js.native
  def setDate(date: Integer): Unit         = js.native
  def setHours(hours: Integer): Unit       = js.native
  def setMinutes(minutes: Integer): Unit   = js.native
  def setMonth(month: Integer): Unit       = js.native
  def setNanos(nanoseconds: Integer): Unit = js.native
  def setSeconds(seconds: Integer): Unit   = js.native
  def setTime(milliseconds: Integer): Unit = js.native
  def setYear(year: Integer): Unit         = js.native
}
